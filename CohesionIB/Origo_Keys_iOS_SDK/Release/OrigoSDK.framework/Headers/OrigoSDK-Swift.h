// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef ORIGOSDK_SWIFT_H
#define ORIGOSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="OrigoSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, HTTPStatusCode, open) {
  HTTPStatusCodeKHTTPStatusCodeContinue = 100,
  HTTPStatusCodeKHTTPStatusCodeSwitchingProtocols = 101,
  HTTPStatusCodeKHTTPStatusCodeProcessing = 102,
  HTTPStatusCodeKHTTPStatusCodeOK = 200,
  HTTPStatusCodeKHTTPStatusCodeCreated = 201,
  HTTPStatusCodeKHTTPStatusCodeAccepted = 202,
  HTTPStatusCodeKHTTPStatusCodeNonAuthoritativeInformation = 203,
  HTTPStatusCodeKHTTPStatusCodeNoContent = 204,
  HTTPStatusCodeKHTTPStatusCodeResetContent = 205,
  HTTPStatusCodeKHTTPStatusCodePartialContent = 206,
  HTTPStatusCodeKHTTPStatusCodeMultiStatus = 207,
  HTTPStatusCodeKHTTPStatusCodeAlreadyReported = 208,
  HTTPStatusCodeKHTTPStatusCodeIMUsed = 226,
  HTTPStatusCodeKHTTPStatusCodeLowOnStorageSpace = 250,
  HTTPStatusCodeKHTTPStatusCodeMultipleChoices = 300,
  HTTPStatusCodeKHTTPStatusCodeMovedPermanently = 301,
  HTTPStatusCodeKHTTPStatusCodeFound = 302,
  HTTPStatusCodeKHTTPStatusCodeSeeOther = 303,
  HTTPStatusCodeKHTTPStatusCodeNotModified = 304,
  HTTPStatusCodeKHTTPStatusCodeUseProxy = 305,
  HTTPStatusCodeKHTTPStatusCodeSwitchProxy = 306,
  HTTPStatusCodeKHTTPStatusCodeTemporaryRedirect = 307,
  HTTPStatusCodeKHTTPStatusCodePermanentRedirect = 308,
  HTTPStatusCodeKHTTPStatusCodeBadRequest = 400,
  HTTPStatusCodeKHTTPStatusCodeUnauthorized = 401,
  HTTPStatusCodeKHTTPStatusCodePaymentRequired = 402,
  HTTPStatusCodeKHTTPStatusCodeForbidden = 403,
  HTTPStatusCodeKHTTPStatusCodeNotFound = 404,
  HTTPStatusCodeKHTTPStatusCodeMethodNotAllowed = 405,
  HTTPStatusCodeKHTTPStatusCodeNotAcceptable = 406,
  HTTPStatusCodeKHTTPStatusCodeProxyAuthenticationRequired = 407,
  HTTPStatusCodeKHTTPStatusCodeRequestTimeout = 408,
  HTTPStatusCodeKHTTPStatusCodeConflict = 409,
  HTTPStatusCodeKHTTPStatusCodeGone = 410,
  HTTPStatusCodeKHTTPStatusCodeLengthRequired = 411,
  HTTPStatusCodeKHTTPStatusCodePreconditionFailed = 412,
  HTTPStatusCodeKHTTPStatusCodeRequestEntityTooLarge = 413,
  HTTPStatusCodeKHTTPStatusCodeRequestURITooLong = 414,
  HTTPStatusCodeKHTTPStatusCodeUnsupportedMediaType = 415,
  HTTPStatusCodeKHTTPStatusCodeRequestedRangeNotSatisfiable = 416,
  HTTPStatusCodeKHTTPStatusCodeExpectationFailed = 417,
  HTTPStatusCodeKHTTPStatusCodeIAmATeapot = 418,
  HTTPStatusCodeKHTTPStatusCodeEnhanceYourCalm = 420,
  HTTPStatusCodeKHTTPStatusCodeUnprocessableEntity = 422,
  HTTPStatusCodeKHTTPStatusCodeLocked = 423,
  HTTPStatusCodeKHTTPStatusCodeFailedDependency = 424,
  HTTPStatusCodeKHTTPStatusCodeUnorderedCollection = 425,
  HTTPStatusCodeKHTTPStatusCodeUpgradeRequired = 426,
  HTTPStatusCodeKHTTPStatusCodePreconditionRequired = 428,
  HTTPStatusCodeKHTTPStatusCodeTooManyRequests = 429,
  HTTPStatusCodeKHTTPStatusCodeRequestHeaderFieldsTooLarge = 431,
  HTTPStatusCodeKHTTPStatusCodeNoResponse = 444,
  HTTPStatusCodeKHTTPStatusCodeRetryWith = 449,
  HTTPStatusCodeKHTTPStatusCodeBlockedByWindowsParentalControls = 450,
  HTTPStatusCodeKHTTPStatusCodeParameterNotUnderstood = 451,
  HTTPStatusCodeKHTTPStatusCodeConferenceNotFound = 452,
  HTTPStatusCodeKHTTPStatusCodeNotEnoughBandwidth = 453,
  HTTPStatusCodeKHTTPStatusCodeSessionNotFound = 454,
  HTTPStatusCodeKHTTPStatusCodeMethodNotValidInThisState = 455,
  HTTPStatusCodeKHTTPStatusCodeHeaderFieldNotValidForResource = 456,
  HTTPStatusCodeKHTTPStatusCodeInvalidRange = 457,
  HTTPStatusCodeKHTTPStatusCodeParameterIsReadOnly = 458,
  HTTPStatusCodeKHTTPStatusCodeAggregateOperationNotAllowed = 459,
  HTTPStatusCodeKHTTPStatusCodeOnlyAggregateOperationAllowed = 460,
  HTTPStatusCodeKHTTPStatusCodeUnsupportedTransport = 461,
  HTTPStatusCodeKHTTPStatusCodeDestinationUnreachable = 462,
  HTTPStatusCodeKHTTPStatusCodeRequestHeaderTooLarge = 494,
  HTTPStatusCodeKHTTPStatusCodeCertError = 495,
  HTTPStatusCodeKHTTPStatusCodeNoCert = 496,
  HTTPStatusCodeKHTTPStatusCodeHTTPToHTTPS = 497,
  HTTPStatusCodeKHTTPStatusCodeClientClosedRequest = 499,
  HTTPStatusCodeKHTTPStatusCodeInternalServerError = 500,
  HTTPStatusCodeKHTTPStatusCodeNotImplemented = 501,
  HTTPStatusCodeKHTTPStatusCodeBadGateway = 502,
  HTTPStatusCodeKHTTPStatusCodeServiceUnavailable = 503,
  HTTPStatusCodeKHTTPStatusCodeGatewayTimeout = 504,
  HTTPStatusCodeKHTTPStatusCodeHTTPVersionNotSupported = 505,
  HTTPStatusCodeKHTTPStatusCodeVariantAlsoNegotiates = 506,
  HTTPStatusCodeKHTTPStatusCodeInsufficientStorage = 507,
  HTTPStatusCodeKHTTPStatusCodeLoopDetected = 508,
  HTTPStatusCodeKHTTPStatusCodeBandwidthLimitExceeded = 509,
  HTTPStatusCodeKHTTPStatusCodeNotExtended = 510,
  HTTPStatusCodeKHTTPStatusCodeNetworkAuthenticationRequired = 511,
  HTTPStatusCodeKHTTPStatusCodeOptionNotSupported = 551,
  HTTPStatusCodeKHTTPStatusCodeNetworkReadTimeoutError = 598,
  HTTPStatusCodeKHTTPStatusCodeNetworkConnectTimeoutError = 599,
  HTTPStatusCodeKHTTPStatusCodeDefault = 1355,
};


SWIFT_CLASS("_TtC8OrigoSDK21OrigoDataProviderBase")
@interface OrigoDataProviderBase : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;
@class NSNumber;

SWIFT_CLASS("_TtC8OrigoSDK17OrigoDataProvider")
@interface OrigoDataProvider : OrigoDataProviderBase
+ (void)isAppNameValid:(NSString * _Nonnull)name completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


enum OrigoKeysNetworkErrorCode : NSInteger;

SWIFT_CLASS("_TtC8OrigoSDK19OrigoErrorConverter")
@interface OrigoErrorConverter : NSObject
+ (NSError * _Nonnull)origoErrorWith:(enum HTTPStatusCode)httpErrorCode withNestedError:(NSError * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (enum OrigoKeysNetworkErrorCode)toErrorCodeFromHttpErrorStatus:(enum HTTPStatusCode)httpErrorCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, OrigoKeysNetworkErrorCode, open) {
/// 10099, An internal error occurred | Retry or contact the key administrator if problem persists..
  OrigoKeysNetworkErrorCodeErrorCodeInternal = 10099,
/// 10702, The server communication failed. This is normally because of a network problem. | Check internet connectivity or try again later.
  OrigoKeysNetworkErrorCodeErrorCodeServerUnreachable = 10702,
/// 10701, Server replied API INCOMPATIBLE. The TSM reported that the current version of the SDK is too old. | upgrade the application.
  OrigoKeysNetworkErrorCodeErrorCodeSDKIncompatible = 10701,
/// 15902, Server replied with status saying the app name is invalid. | Contact HID and ensure the right app name is used to redeem the invitation code.
  OrigoKeysNetworkErrorCodeApplicationNameNotAvailable = 15902,
};


SWIFT_CLASS("_TtC8OrigoSDK11PassKitUtil")
@interface PassKitUtil : NSObject
+ (void)suppressApplePay;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
